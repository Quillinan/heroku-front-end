{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Milton Quillinan\\\\Desktop\\\\BeSafe\\\\CRUD\\\\React\\\\produtos_frontend\\\\src\\\\pages\\\\Produtos\\\\Info\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Badge, Button, Card } from \"react-bootstrap\";\nimport api from \"../../../services/api\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Info = () => {\n  _s();\n\n  const history = useHistory();\n  let {\n    id\n  } = useParams();\n  const [produto, setProduto] = useState();\n  useEffect(() => {\n    findProduto(id);\n  }, [id]);\n\n  function back() {\n    history.goBack();\n  }\n\n  async function findProduto(id) {\n    const response = await api.get(`/produtos/${id}`);\n    console.log(response);\n    setProduto(response.data);\n  }\n\n  function formateDate(date) {\n    return moment(date).format(\"DD/MM/YYYY\");\n  }\n\n  function formatePrice(price) {\n    return price.toLocaleString('pt-br', {\n      style: 'currency',\n      currency: 'BRL'\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Informa\\xE7\\xF5es do produto \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: produto === null || produto === void 0 ? void 0 : produto.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [formatePrice(produto === null || produto === void 0 ? void 0 : produto.price), /*#__PURE__*/_jsxDEV(Badge, {\n            variant: \"info\",\n            children: formateDate(produto === null || produto === void 0 ? void 0 : produto.created_at)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Badge, {\n            variant: \"info\",\n            children: formateDate(produto === null || produto === void 0 ? void 0 : produto.updated_at)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"dark\",\n      type: \"submit\",\n      active: true,\n      onClick: () => back(),\n      children: \"Voltar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Info, \"55sA74xqXh6i1ze/fxaqQV+suL0=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = Info;\nexport default Info;\n\nvar _c;\n\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"sources":["C:/Users/Milton Quillinan/Desktop/BeSafe/CRUD/React/produtos_frontend/src/pages/Produtos/Info/index.tsx"],"names":["React","useState","useEffect","useHistory","useParams","Badge","Button","Card","api","moment","Info","history","id","produto","setProduto","findProduto","back","goBack","response","get","console","log","data","formateDate","date","format","formatePrice","price","toLocaleString","style","currency","name","created_at","updated_at"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Badge, Button, Card } from \"react-bootstrap\";\r\nimport api from \"../../../services/api\";\r\nimport Produtos from \"..\";\r\n\r\nimport moment from \"moment\";\r\n\r\ninterface IProduto {\r\n    id: number;\r\n    name: string;\r\n    price: number;\r\n    created_at: Date;\r\n    updated_at: Date;\r\n}\r\n\r\nconst Info: React.FC = () => {\r\n\r\n    const history = useHistory()\r\n    let { id } = useParams<{id: string}>();\r\n    const [produto, setProduto] = useState<IProduto>()\r\n\r\n    useEffect(() => {\r\n        findProduto(id)\r\n    }, [id])\r\n\r\n    function back(): void{\r\n        history.goBack()\r\n    }\r\n\r\n    async function findProduto(id: string){\r\n        const response = await api.get(`/produtos/${id}`)\r\n        console.log(response)\r\n        setProduto(response.data)\r\n    }\r\n\r\n    function formateDate(date: Date){\r\n        return moment(date).format(\"DD/MM/YYYY\")\r\n    }\r\n\r\n    function formatePrice(price: Number){\r\n        return price.toLocaleString('pt-br',{style: 'currency', currency: 'BRL'})\r\n    }\r\n\r\n    return(\r\n        <div className=\"text-center\">\r\n            <br />\r\n            <h1> Informações do produto </h1>\r\n            <br />\r\n\r\n            <Card>\r\n                <Card.Body>\r\n                    <Card.Title>{ produto?.name}</Card.Title>\r\n                    <Card.Text>\r\n                        { formatePrice(produto?.price) }\r\n                    \r\n                    <Badge variant=\"info\">\r\n                        { formateDate(produto?.created_at) }\r\n                    </Badge>\r\n                    <Badge variant=\"info\">\r\n                        { formateDate(produto?.updated_at) }\r\n                    </Badge >\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n            <br />\r\n            <Button variant=\"dark\" \r\n                type=\"submit\"active\r\n                onClick={() => back()}>\r\n                Voltar\r\n            </Button>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Info;"]},"metadata":{},"sourceType":"module"}