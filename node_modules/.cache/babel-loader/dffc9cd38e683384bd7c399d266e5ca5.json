{"ast":null,"code":"import _asyncToGenerator from\"C:\\\\Users\\\\Milton\\\\Desktop\\\\DEPLOY\\\\CRUD\\\\React\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _slicedToArray from\"C:\\\\Users\\\\Milton\\\\Desktop\\\\DEPLOY\\\\CRUD\\\\React\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\Milton\\\\Desktop\\\\DEPLOY\\\\CRUD\\\\React\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useState,useEffect}from'react';import{useHistory,useParams}from'react-router-dom';import{Badge,Button,Card}from'react-bootstrap';import api from'../../../services/api';import moment from'moment';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Info=function Info(){var history=useHistory();var _useParams=useParams(),id=_useParams.id;var _useState=useState(),_useState2=_slicedToArray(_useState,2),produto=_useState2[0],setProduto=_useState2[1];useEffect(function(){findProduto(id);},[id]);function back(){history.goBack();}// Função que chama todos os produtos da api\nfunction findProduto(_x){return _findProduto.apply(this,arguments);}// Formatação da data\nfunction _findProduto(){_findProduto=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(id){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return api.get(\"/produtos/\".concat(id));case 2:response=_context.sent;console.log(response);setProduto(response.data);case 5:case\"end\":return _context.stop();}}},_callee);}));return _findProduto.apply(this,arguments);}function formateDate(date){return moment(date).format('DD/MM/YYYY');}return/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"h1\",{children:\" Informa\\xE7\\xF5es do produto \"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:produto===null||produto===void 0?void 0:produto.name}),/*#__PURE__*/_jsxs(Card.Text,{children:[\"R$\",produto===null||produto===void 0?void 0:produto.price,\",00\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Data de Cadastro: \"}),/*#__PURE__*/_jsx(Badge,{bg:\"primary\",children:formateDate(produto===null||produto===void 0?void 0:produto.created_at)}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"\\xDAltima atualiza\\xE7\\xE3o: \"}),/*#__PURE__*/_jsx(Badge,{bg:\"warning\",children:formateDate(produto===null||produto===void 0?void 0:produto.updated_at)})]})]})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Button,{variant:\"dark\",type:\"submit\",active:true,onClick:function onClick(){return back();},children:\"Voltar\"})]});};export default Info;","map":{"version":3,"sources":["C:/Users/Milton/Desktop/DEPLOY/CRUD/React/src/pages/Produtos/Info/index.tsx"],"names":["React","useState","useEffect","useHistory","useParams","Badge","Button","Card","api","moment","Info","history","id","produto","setProduto","findProduto","back","goBack","get","response","console","log","data","formateDate","date","format","name","price","created_at","updated_at"],"mappings":"maAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,UAAT,CAAqBC,SAArB,KAAsC,kBAAtC,CACA,OAASC,KAAT,CAAgBC,MAAhB,CAAwBC,IAAxB,KAAoC,iBAApC,CACA,MAAOC,CAAAA,GAAP,KAAgB,uBAAhB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,C,wFAUA,GAAMC,CAAAA,IAAc,CAAG,QAAjBA,CAAAA,IAAiB,EAAM,CAC3B,GAAMC,CAAAA,OAAO,CAAGR,UAAU,EAA1B,CACA,eAAaC,SAAS,EAAtB,CAAMQ,EAAN,YAAMA,EAAN,CACA,cAA8BX,QAAQ,EAAtC,wCAAOY,OAAP,eAAgBC,UAAhB,eAEAZ,SAAS,CAAC,UAAM,CACda,WAAW,CAACH,EAAD,CAAX,CACD,CAFQ,CAEN,CAACA,EAAD,CAFM,CAAT,CAIA,QAASI,CAAAA,IAAT,EAAsB,CACpBL,OAAO,CAACM,MAAR,GACD,CAED;AAb2B,QAcZF,CAAAA,WAdY,gDAoB3B;AApB2B,6FAc3B,iBAA2BH,EAA3B,qJACyBJ,CAAAA,GAAG,CAACU,GAAJ,qBAAqBN,EAArB,EADzB,QACQO,QADR,eAEEC,OAAO,CAACC,GAAR,CAAYF,QAAZ,EACAL,UAAU,CAACK,QAAQ,CAACG,IAAV,CAAV,CAHF,sDAd2B,8CAqB3B,QAASC,CAAAA,WAAT,CAAqBC,IAArB,CAA6C,CAC3C,MAAOf,CAAAA,MAAM,CAACe,IAAD,CAAN,CAAaC,MAAb,CAAoB,YAApB,CAAP,CACD,CAED,mBACE,aAAK,SAAS,CAAC,aAAf,wBACE,aADF,cAEE,sDAFF,cAGE,aAHF,cAKE,KAAC,IAAD,wBACE,MAAC,IAAD,CAAM,IAAN,yBACE,KAAC,IAAD,CAAM,KAAN,WAAaZ,OAAb,SAAaA,OAAb,iBAAaA,OAAO,CAAEa,IAAtB,EADF,cAEE,MAAC,IAAD,CAAM,IAAN,iBACKb,OADL,SACKA,OADL,iBACKA,OAAO,CAAEc,KADd,oBAEE,aAFF,cAGE,8CAHF,cAIE,KAAC,KAAD,EAAO,EAAE,CAAC,SAAV,UAAqBJ,WAAW,CAACV,OAAD,SAACA,OAAD,iBAACA,OAAO,CAAEe,UAAV,CAAhC,EAJF,cAKE,aALF,cAME,yDANF,cAOE,KAAC,KAAD,EAAO,EAAE,CAAC,SAAV,UAAqBL,WAAW,CAACV,OAAD,SAACA,OAAD,iBAACA,OAAO,CAAEgB,UAAV,CAAhC,EAPF,GAFF,GADF,EALF,cAmBE,aAnBF,cAoBE,KAAC,MAAD,EAAQ,OAAO,CAAC,MAAhB,CAAuB,IAAI,CAAC,QAA5B,CAAqC,MAAM,KAA3C,CAA4C,OAAO,CAAE,yBAAMb,CAAAA,IAAI,EAAV,EAArD,oBApBF,GADF,CA0BD,CAnDD,CAqDA,cAAeN,CAAAA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { Badge, Button, Card } from 'react-bootstrap';\r\nimport api from '../../../services/api';\r\n\r\nimport moment from 'moment';\r\n\r\ninterface IProduto {\r\n  id: number;\r\n  name: string;\r\n  price: number;\r\n  created_at: Date;\r\n  updated_at: Date;\r\n}\r\n\r\nconst Info: React.FC = () => {\r\n  const history = useHistory();\r\n  let { id } = useParams<{ id: string }>();\r\n  const [produto, setProduto] = useState<IProduto>();\r\n\r\n  useEffect(() => {\r\n    findProduto(id);\r\n  }, [id]);\r\n\r\n  function back(): void {\r\n    history.goBack();\r\n  }\r\n\r\n  // Função que chama todos os produtos da api\r\n  async function findProduto(id: string) {\r\n    const response = await api.get(`/produtos/${id}`);\r\n    console.log(response);\r\n    setProduto(response.data);\r\n  }\r\n\r\n  // Formatação da data\r\n  function formateDate(date: Date | undefined) {\r\n    return moment(date).format('DD/MM/YYYY');\r\n  }\r\n\r\n  return (\r\n    <div className=\"text-center\">\r\n      <br />\r\n      <h1> Informações do produto </h1>\r\n      <br />\r\n\r\n      <Card>\r\n        <Card.Body>\r\n          <Card.Title>{produto?.name}</Card.Title>\r\n          <Card.Text>\r\n            R${produto?.price},00\r\n            <br />\r\n            <strong>Data de Cadastro: </strong>\r\n            <Badge bg=\"primary\">{formateDate(produto?.created_at)}</Badge>\r\n            <br />\r\n            <strong>Última atualização: </strong>\r\n            <Badge bg=\"warning\">{formateDate(produto?.updated_at)}</Badge>\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n      <br />\r\n      <Button variant=\"dark\" type=\"submit\" active onClick={() => back()}>\r\n        Voltar\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Info;\r\n"]},"metadata":{},"sourceType":"module"}