{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Milton\\\\Desktop\\\\DEPLOY\\\\CRUD\\\\React\\\\src\\\\pages\\\\Produtos\\\\Pagination\\\\index.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Número de botões na barra de ação\nconst MAX_ITEMS = 9;\nconst MAX_LEFT = (MAX_ITEMS - 1) / 2;\n\nconst Pagination = _ref => {\n  let {\n    limit,\n    total,\n    offset\n  } = _ref;\n  // Checagem de página\n  const current = offset ? offset / limit + 1 : 1;\n  const pages = Math.ceil(total / limit);\n  const first = Math.max(current - MAX_LEFT, 1);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: Array.from({\n      length: MAX_ITEMS\n    }).map((_, index) => index + first)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["C:/Users/Milton/Desktop/DEPLOY/CRUD/React/src/pages/Produtos/Pagination/index.tsx"],"names":["React","MAX_ITEMS","MAX_LEFT","Pagination","limit","total","offset","current","pages","Math","ceil","first","max","Array","from","length","map","_","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA;AACA,MAAMC,SAAS,GAAG,CAAlB;AACA,MAAMC,QAAQ,GAAG,CAACD,SAAS,GAAG,CAAb,IAAkB,CAAnC;;AAEA,MAAME,UAAoB,GAAG,QAA8B;AAAA,MAA7B;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA;AAAhB,GAA6B;AACzD;AACA,QAAMC,OAAO,GAAGD,MAAM,GAAGA,MAAM,GAAGF,KAAT,GAAiB,CAApB,GAAwB,CAA9C;AACA,QAAMI,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUL,KAAK,GAAGD,KAAlB,CAAd;AACA,QAAMO,KAAK,GAAGF,IAAI,CAACG,GAAL,CAASL,OAAO,GAAGL,QAAnB,EAA6B,CAA7B,CAAd;AAEA,sBACE;AAAA,cACGW,KAAK,CAACC,IAAN,CAAW;AAAEC,MAAAA,MAAM,EAAEd;AAAV,KAAX,EAAkCe,GAAlC,CAAsC,CAACC,CAAD,EAAIC,KAAJ,KAAcA,KAAK,GAAGP,KAA5D;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAXD;;KAAMR,U;AAaN,eAAeA,UAAf","sourcesContent":["import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\n// Número de botões na barra de ação\r\nconst MAX_ITEMS = 9;\r\nconst MAX_LEFT = (MAX_ITEMS - 1) / 2;\r\n\r\nconst Pagination: React.FC = ({ limit, total, offset }) => {\r\n  // Checagem de página\r\n  const current = offset ? offset / limit + 1 : 1;\r\n  const pages = Math.ceil(total / limit);\r\n  const first = Math.max(current - MAX_LEFT, 1);\r\n\r\n  return (\r\n    <ul>\r\n      {Array.from({ length: MAX_ITEMS }).map((_, index) => index + first)}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n"]},"metadata":{},"sourceType":"module"}