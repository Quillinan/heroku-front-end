{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Milton\\\\Desktop\\\\DEPLOY\\\\CRUD\\\\React\\\\src\\\\pages\\\\Produtos\\\\Info\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Badge, Button, Card } from 'react-bootstrap';\nimport api from '../../../services/api';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Info = () => {\n  _s();\n\n  const history = useHistory();\n  let {\n    id\n  } = useParams();\n  const [produto, setProduto] = useState();\n  useEffect(() => {\n    findProduto(id);\n  }, [id]);\n\n  function back() {\n    history.goBack();\n  } // Função que chama todos os produtos da api\n\n\n  async function findProduto(id) {\n    const response = await api.get(`/produtos/${id}`);\n    console.log(response);\n    setProduto(response.data);\n  } // Formatação da data\n\n\n  function formateDate(date) {\n    return moment(date).format('DD/MM/YYYY');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Informa\\xE7\\xF5es do produto \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: produto === null || produto === void 0 ? void 0 : produto.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"R$\", produto === null || produto === void 0 ? void 0 : produto.price, \",00\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Data de Cadastro: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Badge, {\n            bg: \"primary\",\n            children: formateDate(produto === null || produto === void 0 ? void 0 : produto.created_at)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\xDAltima atualiza\\xE7\\xE3o: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Badge, {\n            bg: \"warning\",\n            children: formateDate(produto === null || produto === void 0 ? void 0 : produto.updated_at)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"dark\",\n      type: \"submit\",\n      active: true,\n      onClick: () => back(),\n      children: \"Voltar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Info, \"55sA74xqXh6i1ze/fxaqQV+suL0=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = Info;\nexport default Info;\n\nvar _c;\n\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"sources":["C:/Users/Milton/Desktop/DEPLOY/CRUD/React/src/pages/Produtos/Info/index.tsx"],"names":["React","useState","useEffect","useHistory","useParams","Badge","Button","Card","api","moment","Info","history","id","produto","setProduto","findProduto","back","goBack","response","get","console","log","data","formateDate","date","format","name","price","created_at","updated_at"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { Badge, Button, Card } from 'react-bootstrap';\r\nimport api from '../../../services/api';\r\n\r\nimport moment from 'moment';\r\n\r\ninterface IProduto {\r\n  id: number;\r\n  name: string;\r\n  price: number;\r\n  created_at: Date;\r\n  updated_at: Date;\r\n}\r\n\r\nconst Info: React.FC = () => {\r\n  const history = useHistory();\r\n  let { id } = useParams<{ id: string }>();\r\n  const [produto, setProduto] = useState<IProduto>();\r\n\r\n  useEffect(() => {\r\n    findProduto(id);\r\n  }, [id]);\r\n\r\n  function back(): void {\r\n    history.goBack();\r\n  }\r\n\r\n  // Função que chama todos os produtos da api\r\n  async function findProduto(id: string) {\r\n    const response = await api.get(`/produtos/${id}`);\r\n    console.log(response);\r\n    setProduto(response.data);\r\n  }\r\n\r\n  // Formatação da data\r\n  function formateDate(date: Date | undefined) {\r\n    return moment(date).format('DD/MM/YYYY');\r\n  }\r\n\r\n  return (\r\n    <div className=\"text-center\">\r\n      <br />\r\n      <h1> Informações do produto </h1>\r\n      <br />\r\n\r\n      <Card>\r\n        <Card.Body>\r\n          <Card.Title>{produto?.name}</Card.Title>\r\n          <Card.Text>\r\n            R${produto?.price},00\r\n            <br />\r\n            <strong>Data de Cadastro: </strong>\r\n            <Badge bg=\"primary\">{formateDate(produto?.created_at)}</Badge>\r\n            <br />\r\n            <strong>Última atualização: </strong>\r\n            <Badge bg=\"warning\">{formateDate(produto?.updated_at)}</Badge>\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n      <br />\r\n      <Button variant=\"dark\" type=\"submit\" active onClick={() => back()}>\r\n        Voltar\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Info;\r\n"]},"metadata":{},"sourceType":"module"}