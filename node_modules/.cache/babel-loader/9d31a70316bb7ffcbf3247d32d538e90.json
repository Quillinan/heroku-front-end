{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Milton\\\\Desktop\\\\DEPLOY\\\\CRUD\\\\React\\\\src\\\\pages\\\\Produtos\\\\Form\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport api from \"../../../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Produtos = () => {\n  _s();\n\n  const history = useHistory();\n  let {\n    id\n  } = useParams();\n  const [model, setModel] = useState({\n    name: '',\n    price: 0\n  });\n  useEffect(() => {\n    if (id !== undefined) {\n      findProduto(id);\n    }\n  }, [id]); // Função para edição de produto\n\n  function updatedModel(e) {\n    setModel({ ...model,\n      [e.target.name]: e.target.value\n    });\n  } // Função de volta na navegação\n\n\n  function back() {\n    history.goBack();\n  } // Limpa ip do console da página\n\n\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    if (id !== undefined) {\n      const response = await api.put(`produtos/${id}`, model);\n    } else {\n      const response = await api.post('/produtos', model);\n    }\n\n    back();\n  } // Função que chama todos os produtos da api\n\n\n  async function findProduto(id) {\n    const response = await api.get(`produtos/${id}`);\n    setModel({\n      name: response.data.name,\n      price: response.data.price\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Cadastre o seu produtos \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Nome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"name\",\n            value: model.name,\n            onChange: e => updatedModel(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Pre\\xE7o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            name: \"price\",\n            value: model.price,\n            onChange: e => updatedModel(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          type: \"submit\",\n          active: true,\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Produtos, \"MnV5XmVEdJt008pkNOGcU9U1org=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = Produtos;\nexport default Produtos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Produtos\");","map":{"version":3,"sources":["C:/Users/Milton/Desktop/DEPLOY/CRUD/React/src/pages/Produtos/Form/index.tsx"],"names":["React","useState","useEffect","useHistory","useParams","Form","Button","api","Produtos","history","id","model","setModel","name","price","undefined","findProduto","updatedModel","e","target","value","back","goBack","onSubmit","preventDefault","response","put","post","get","data"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, ChangeEvent} from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport api from \"../../../services/api\";\r\n\r\n\r\ninterface IProduto {\r\n    name: string;\r\n    price: number;\r\n}\r\n\r\nconst Produtos: React.FC = () => {\r\n\r\n    const history = useHistory()\r\n    let { id } = useParams<{id: string}>();\r\n    const [model, setModel] = useState<IProduto>({\r\n        name: '',\r\n        price: 0,\r\n    })\r\n\r\n    useEffect(() => {\r\n        if(id !== undefined){\r\n            findProduto(id)\r\n        }\r\n    }, [id])\r\n\r\n    // Função para edição de produto\r\n    function updatedModel (e: ChangeEvent<HTMLInputElement>){\r\n\r\n        setModel({\r\n            ...model,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    // Função de volta na navegação\r\n    function back() {\r\n        history.goBack()\r\n    }\r\n\r\n    // Limpa ip do console da página\r\n    async function onSubmit (e: ChangeEvent<HTMLFormElement>) {\r\n        e.preventDefault()\r\n\r\n        if(id !== undefined){\r\n            const response = await api.put(`produtos/${id}`, model)\r\n        }\r\n        else{\r\n            const response = await api.post('/produtos', model)\r\n        }\r\n        back()\r\n    }\r\n\r\n    // Função que chama todos os produtos da api\r\n    async function findProduto(id: string){\r\n        const response = await api.get(`produtos/${id}`)\r\n        setModel({\r\n            name: response.data.name,\r\n            price: response.data.price\r\n        })\r\n    }\r\n\r\n    return(\r\n        <><div className=\"text-center\">\r\n            <br />\r\n            <h1> Cadastre o seu produtos </h1>\r\n            <br />\r\n        </div>\r\n        <div className=\"container\">\r\n            <Form onSubmit={onSubmit}>\r\n                <Form.Group>\r\n                    <Form.Label>Nome</Form.Label>\r\n                    <Form.Control type=\"text\" name=\"name\"\r\n                    value={model.name}\r\n                    onChange={(e: ChangeEvent<HTMLInputElement>) => updatedModel(e)}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Preço</Form.Label>\r\n                    <Form.Control type=\"number\" name=\"price\"\r\n                    value={model.price}\r\n                    onChange={(e: ChangeEvent<HTMLInputElement>) => updatedModel(e)}\r\n                    />\r\n                </Form.Group>\r\n                <br />\r\n                <Button variant=\"success\" type=\"submit\"active>\r\n                    Enviar\r\n                </Button>\r\n            </Form>\r\n        </div></>\r\n    )\r\n}\r\n\r\nexport default Produtos;"]},"metadata":{},"sourceType":"module"}