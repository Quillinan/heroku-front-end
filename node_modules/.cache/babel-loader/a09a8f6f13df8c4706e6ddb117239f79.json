{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Milton\\\\Desktop\\\\DEPLOY\\\\CRUD\\\\React\\\\src\\\\pages\\\\Produtos\\\\Pagination\\\\index.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAX_ITEMS = 9;\nconst MAX_LEFT = (MAX_ITEMS - 1) / 2;\n\nconst Pagination = _ref => {\n  let {\n    limit,\n    total,\n    offset,\n    setOffset\n  } = _ref;\n  const current = offset ? offset / limit + 1 : 1;\n  const pages = Math.ceil(total / limit);\n  const maxFirst = Math.max(pages - (MAX_ITEMS - 1), 1);\n  const first = Math.min(Math.max(current - MAX_LEFT, 1), maxFirst);\n\n  function onPageChange(page) {\n    setOffset((page - 1) * limit);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"pagination\",\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onPageChange(current - 1),\n        disabled: current === 1,\n        children: \"Anterior\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), Array.from({\n      length: Math.min(MAX_ITEMS, pages)\n    }).map((_, index) => index + first).map(page => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onPageChange(page),\n        className: page === current ? 'pagination__item--active' : null,\n        children: page\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, page, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onPageChange(current + 1),\n        disabled: current === pages,\n        children: \"Pr\\xF3xima\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Pagination;\nexport default Pagination; // () => {\n//     let active = 2;\n//     let items = [];\n//     for (let number = 1; number <= 5; number++) {\n//       items.push(\n//         <Pagination.Item key={number} active={number === active}>\n//           {number}\n//         </Pagination.Item>\n//       );\n//     }\n//     return (\n//       <div>\n//         <Pagination>{items}</Pagination>\n//         <br />\n//       </div>\n//     );\n//   };\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["C:/Users/Milton/Desktop/DEPLOY/CRUD/React/src/pages/Produtos/Pagination/index.tsx"],"names":["React","MAX_ITEMS","MAX_LEFT","Pagination","limit","total","offset","setOffset","current","pages","Math","ceil","maxFirst","max","first","min","onPageChange","page","Array","from","length","map","_","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAG,CAAlB;AACA,MAAMC,QAAQ,GAAG,CAACD,SAAS,GAAG,CAAb,IAAkB,CAAnC;;AAEA,MAAME,UAAU,GAAG,QAAyC;AAAA,MAAxC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,MAAhB;AAAwBC,IAAAA;AAAxB,GAAwC;AAC1D,QAAMC,OAAO,GAAGF,MAAM,GAAGA,MAAM,GAAGF,KAAT,GAAiB,CAApB,GAAwB,CAA9C;AACA,QAAMK,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUN,KAAK,GAAGD,KAAlB,CAAd;AACA,QAAMQ,QAAQ,GAAGF,IAAI,CAACG,GAAL,CAASJ,KAAK,IAAIR,SAAS,GAAG,CAAhB,CAAd,EAAkC,CAAlC,CAAjB;AACA,QAAMa,KAAK,GAAGJ,IAAI,CAACK,GAAL,CAASL,IAAI,CAACG,GAAL,CAASL,OAAO,GAAGN,QAAnB,EAA6B,CAA7B,CAAT,EAA0CU,QAA1C,CAAd;;AAEA,WAASI,YAAT,CAAsBC,IAAtB,EAA4B;AAC1BV,IAAAA,SAAS,CAAC,CAACU,IAAI,GAAG,CAAR,IAAab,KAAd,CAAT;AACD;;AAED,sBACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA,4BACE;AAAA,6BACE;AACE,QAAA,OAAO,EAAE,MAAMY,YAAY,CAACR,OAAO,GAAG,CAAX,CAD7B;AAEE,QAAA,QAAQ,EAAEA,OAAO,KAAK,CAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EASGU,KAAK,CAACC,IAAN,CAAW;AAAEC,MAAAA,MAAM,EAAEV,IAAI,CAACK,GAAL,CAASd,SAAT,EAAoBQ,KAApB;AAAV,KAAX,EACEY,GADF,CACM,CAACC,CAAD,EAAIC,KAAJ,KAAcA,KAAK,GAAGT,KAD5B,EAEEO,GAFF,CAEOJ,IAAD,iBACH;AAAA,6BACE;AACE,QAAA,OAAO,EAAE,MAAMD,YAAY,CAACC,IAAD,CAD7B;AAEE,QAAA,SAAS,EAAEA,IAAI,KAAKT,OAAT,GAAmB,0BAAnB,GAAgD,IAF7D;AAAA,kBAIGS;AAJH;AAAA;AAAA;AAAA;AAAA;AADF,OAASA,IAAT;AAAA;AAAA;AAAA;AAAA,YAHH,CATH,eAqBE;AAAA,6BACE;AACE,QAAA,OAAO,EAAE,MAAMD,YAAY,CAACR,OAAO,GAAG,CAAX,CAD7B;AAEE,QAAA,QAAQ,EAAEA,OAAO,KAAKC,KAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CA1CD;;KAAMN,U;AA4CN,eAAeA,UAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\r\n\r\nconst MAX_ITEMS = 9;\r\nconst MAX_LEFT = (MAX_ITEMS - 1) / 2;\r\n\r\nconst Pagination = ({ limit, total, offset, setOffset }) => {\r\n  const current = offset ? offset / limit + 1 : 1;\r\n  const pages = Math.ceil(total / limit);\r\n  const maxFirst = Math.max(pages - (MAX_ITEMS - 1), 1);\r\n  const first = Math.min(Math.max(current - MAX_LEFT, 1), maxFirst);\r\n\r\n  function onPageChange(page) {\r\n    setOffset((page - 1) * limit);\r\n  }\r\n\r\n  return (\r\n    <ul className=\"pagination\">\r\n      <li>\r\n        <button\r\n          onClick={() => onPageChange(current - 1)}\r\n          disabled={current === 1}\r\n        >\r\n          Anterior\r\n        </button>\r\n      </li>\r\n      {Array.from({ length: Math.min(MAX_ITEMS, pages) })\r\n        .map((_, index) => index + first)\r\n        .map((page) => (\r\n          <li key={page}>\r\n            <button\r\n              onClick={() => onPageChange(page)}\r\n              className={page === current ? 'pagination__item--active' : null}\r\n            >\r\n              {page}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      <li>\r\n        <button\r\n          onClick={() => onPageChange(current + 1)}\r\n          disabled={current === pages}\r\n        >\r\n          Pr√≥xima\r\n        </button>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n\r\n// () => {\r\n//     let active = 2;\r\n//     let items = [];\r\n//     for (let number = 1; number <= 5; number++) {\r\n//       items.push(\r\n//         <Pagination.Item key={number} active={number === active}>\r\n//           {number}\r\n//         </Pagination.Item>\r\n//       );\r\n//     }\r\n//     return (\r\n//       <div>\r\n//         <Pagination>{items}</Pagination>\r\n//         <br />\r\n//       </div>\r\n//     );\r\n//   };\r\n"]},"metadata":{},"sourceType":"module"}